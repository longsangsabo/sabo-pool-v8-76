import { z } from 'zod';

// Tournament registration validation schema
export const tournamentRegistrationSchema = z.object({
  // Tournament selection
  tournament_id: z.string().min(1, 'Vui l√≤ng ch·ªçn gi·∫£i ƒë·∫•u'),

  // Personal information
  player_name: z
    .string()
    .min(2, 'H·ªç t√™n ph·∫£i c√≥ √≠t nh·∫•t 2 k√Ω t·ª±')
    .max(100, 'H·ªç t√™n kh√¥ng ƒë∆∞·ª£c v∆∞·ª£t qu√° 100 k√Ω t·ª±'),

  phone: z
    .string()
    .min(10, 'S·ªë ƒëi·ªán tho·∫°i ph·∫£i c√≥ √≠t nh·∫•t 10 s·ªë')
    .max(15, 'S·ªë ƒëi·ªán tho·∫°i kh√¥ng ƒë∆∞·ª£c v∆∞·ª£t qu√° 15 s·ªë')
    .regex(/^[\d\s\+\-\(\)]+$/, 'S·ªë ƒëi·ªán tho·∫°i kh√¥ng h·ª£p l·ªá'),

  email: z.string().email('Email kh√¥ng h·ª£p l·ªá').optional().or(z.literal('')),

  current_rank: z.string().min(1, 'Vui l√≤ng ch·ªçn h·∫°ng hi·ªán t·∫°i'),

  // Age verification
  age: z
    .number()
    .min(16, 'Ph·∫£i t·ª´ 16 tu·ªïi tr·ªü l√™n ƒë·ªÉ tham gia')
    .max(80, 'Tu·ªïi kh√¥ng h·ª£p l·ªá'),

  // Emergency contact
  emergency_contact: z
    .string()
    .min(10, 'S·ªë ƒëi·ªán tho·∫°i li√™n h·ªá kh·∫©n c·∫•p l√† b·∫Øt bu·ªôc')
    .optional(),

  // Agreement and terms
  agree_terms: z
    .boolean()
    .refine(val => val === true, 'B·∫°n ph·∫£i ƒë·ªìng √Ω v·ªõi ƒëi·ªÅu l·ªá gi·∫£i ƒë·∫•u'),

  agree_rules: z
    .boolean()
    .refine(val => val === true, 'B·∫°n ph·∫£i ƒë·ªìng √Ω v·ªõi quy t·∫Øc thi ƒë·∫•u'),

  // Payment method
  payment_method: z.enum(['vnpay', 'cash', 'transfer'], {
    required_error: 'Vui l√≤ng ch·ªçn ph∆∞∆°ng th·ª©c thanh to√°n',
  }),

  // Additional notes
  notes: z
    .string()
    .max(500, 'Ghi ch√∫ kh√¥ng ƒë∆∞·ª£c v∆∞·ª£t qu√° 500 k√Ω t·ª±')
    .optional(),

  // Previous tournament experience
  tournament_experience: z.enum(['beginner', 'intermediate', 'experienced'], {
    required_error: 'Vui l√≤ng ch·ªçn kinh nghi·ªám thi ƒë·∫•u',
  }),
});

export type TournamentRegistrationFormData = z.infer<
  typeof tournamentRegistrationSchema
>;

// Available ranks for registration
export const REGISTRATION_RANKS = [
  { value: 'E+', label: 'Chuy√™n nghi·ªáp ti·∫øn b·ªô (E+)' },
  { value: 'E', label: 'Chuy√™n nghi·ªáp (E)' },
  { value: 'F+', label: 'Xu·∫•t s·∫Øc ti·∫øn b·ªô (F+)' },
  { value: 'F', label: 'Xu·∫•t s·∫Øc (F)' },
  { value: 'G+', label: 'Gi·ªèi ti·∫øn b·ªô (G+)' },
  { value: 'G', label: 'Gi·ªèi (G)' },
  { value: 'H+', label: 'Kh√° ti·∫øn b·ªô (H+)' },
  { value: 'H', label: 'Kh√° (H)' },
  { value: 'I+', label: 'Trung b√¨nh ti·∫øn b·ªô (I+)' },
  { value: 'I', label: 'Trung b√¨nh (I)' },
  { value: 'K+', label: 'Ng∆∞·ªùi m·ªõi ti·∫øn b·ªô (K+)' },
  { value: 'K', label: 'Ng∆∞·ªùi m·ªõi (K)' },
];

// Payment methods
export const PAYMENT_METHODS = [
  { value: 'vnpay', label: 'VNPAY (Th·∫ª ATM/Visa/Master)', icon: 'üí≥' },
  { value: 'cash', label: 'Ti·ªÅn m·∫∑t t·∫°i ƒë·ªãa ƒëi·ªÉm', icon: 'üíµ' },
  { value: 'transfer', label: 'Chuy·ªÉn kho·∫£n ng√¢n h√†ng', icon: 'üè¶' },
];

// Tournament experience levels
export const EXPERIENCE_LEVELS = [
  {
    value: 'beginner',
    label: 'M·ªõi b·∫Øt ƒë·∫ßu (1-5 gi·∫£i)',
    description: '√çt kinh nghi·ªám thi ƒë·∫•u ch√≠nh th·ª©c',
  },
  {
    value: 'intermediate',
    label: 'Trung b√¨nh (6-20 gi·∫£i)',
    description: 'C√≥ kinh nghi·ªám thi ƒë·∫•u c∆° b·∫£n',
  },
  {
    value: 'experienced',
    label: 'Gi√†u kinh nghi·ªám (>20 gi·∫£i)',
    description: 'Th∆∞·ªùng xuy√™n tham gia gi·∫£i ƒë·∫•u',
  },
];

// Default form values
export const getDefaultRegistrationData =
  (): Partial<TournamentRegistrationFormData> => ({
    tournament_id: '',
    player_name: '',
    phone: '',
    email: '',
    current_rank: '',
    age: 18,
    emergency_contact: '',
    agree_terms: false,
    agree_rules: false,
    payment_method: 'vnpay',
    notes: '',
    tournament_experience: 'intermediate',
  });
